// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ReportAlert ReportAlert model
//
// swagger:model ReportAlert
type ReportAlert struct {

	// The token for the CostReport the ReportAlert is associated with.
	CostReportToken string `json:"cost_report_token,omitempty"`

	// The date and time, in UTC, the ReportAlert was created. ISO 8601 Formatted.
	// Example: 2023-08-04T00:00:00Z
	CreatedAt string `json:"created_at,omitempty"`

	// The channels that the alert is sent to.
	RecipientChannels []string `json:"recipient_channels"`

	// The threshold amount that must be met for the alert to fire.
	Threshold int32 `json:"threshold,omitempty"`

	// token
	Token string `json:"token,omitempty"`

	// The date and time, in UTC, the ReportAlert was last updated at. ISO 8601 Formatted.
	// Example: 2023-08-04T00:00:00Z
	UpdatedAt string `json:"updated_at,omitempty"`

	// The tokens of the users that receive the alert.
	UserTokens []string `json:"user_tokens"`
}

// Validate validates this report alert
func (m *ReportAlert) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this report alert based on context it is used
func (m *ReportAlert) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ReportAlert) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ReportAlert) UnmarshalBinary(b []byte) error {
	var res ReportAlert
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
