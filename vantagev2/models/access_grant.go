// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AccessGrant AccessGrant model
//
// swagger:model AccessGrant
type AccessGrant struct {

	// The access status of the AccessGrant.
	Access string `json:"access,omitempty"`

	// The date and time, in UTC, the AccessGrant was created. ISO 8601 Formatted.
	// Example: 2023-08-04T00:00:00Z
	CreatedAt string `json:"created_at,omitempty"`

	// The token for the User who created the AccessGrant.
	CreatedBy string `json:"created_by,omitempty"`

	// The token for any resource the AccessGrant is applied to.
	// Example: rprt_abcd1234
	ResourceToken string `json:"resource_token,omitempty"`

	// The Team token for which an AccessGrant is applied to.
	TeamToken string `json:"team_token,omitempty"`

	// token
	Token string `json:"token,omitempty"`
}

// Validate validates this access grant
func (m *AccessGrant) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this access grant based on context it is used
func (m *AccessGrant) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AccessGrant) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AccessGrant) UnmarshalBinary(b []byte) error {
	var res AccessGrant
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
