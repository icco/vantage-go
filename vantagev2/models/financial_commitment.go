// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// FinancialCommitment financial commitment
//
// swagger:model FinancialCommitment
type FinancialCommitment struct {

	// The account for this financial commitment.
	// Example: 113074892135
	Account string `json:"account,omitempty"`

	// The number of instances for the financial commitment.
	// Example: 4
	Amount string `json:"amount,omitempty"`

	// The amount of the financial commitment.
	// Example: $2.18
	Commitment string `json:"commitment,omitempty"`

	// The commitment type (eg Savings Plan or Reserved Instance).
	// Example: Savings Plan
	CommitmentType string `json:"commitment_type,omitempty"`

	// The date and time, in UTC, the Financial Commitment was created. ISO 8601 Formatted.
	// Example: 2024-03-19T00:00:00Z
	CreatedAt string `json:"created_at,omitempty"`

	// The expiration date of the financial commitment. ISO 8601 Formatted.
	// Example: 2026-08-30
	ExpirationDate string `json:"expiration_date,omitempty"`

	// The type of payment for the financial commitment.
	// Example: No upfront
	PaymentType string `json:"payment_type,omitempty"`

	// The purchase date of the financial commitment. ISO 8601 Formatted.
	// Example: 2023-08-30
	PurchaseDate string `json:"purchase_date,omitempty"`

	// The region for the financial commitment.
	// Example: us-east-1
	Region string `json:"region,omitempty"`

	// The service this commitment applies towards.
	// Example: Compute
	Service string `json:"service,omitempty"`

	// The status of the financial commitment (e.g. active vs expired).
	// Example: active
	Status string `json:"status,omitempty"`

	// The duration in years of the financial commitment.
	// Example: 3 Year
	Term string `json:"term,omitempty"`

	// The type of financial commitment.
	// Example: m5.large
	Type string `json:"type,omitempty"`

	// The token for the Workspace the FinancialCommitment is a part of.
	WorkspaceToken string `json:"workspace_token,omitempty"`
}

// Validate validates this financial commitment
func (m *FinancialCommitment) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this financial commitment based on context it is used
func (m *FinancialCommitment) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *FinancialCommitment) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *FinancialCommitment) UnmarshalBinary(b []byte) error {
	var res FinancialCommitment
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
