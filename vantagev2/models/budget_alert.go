// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// BudgetAlert BudgetAlert model
//
// swagger:model BudgetAlert
type BudgetAlert struct {

	// The tokens for the Budgets that the Budget Alert is monitoring to trigger alerts on.
	BudgetTokens []string `json:"budget_tokens"`

	// The date and time, in UTC, the Budget Alert was created. ISO 8601 Formatted.
	// Example: 2024-03-19T00:00:00Z
	CreatedAt string `json:"created_at,omitempty"`

	// The number of days from the start or end of the month to trigger the alert if the threshold is reached.
	DurationInDays string `json:"duration_in_days,omitempty"`

	// The provider used for sending alerts. This must be configured in the console. Possible values are: slack, microsoft_graph.
	// Example: slack
	IntegrationProvider string `json:"integration_provider,omitempty"`

	// The period tracked on the alert. Used with duration_in_days to determine the time window of the alert. Possible values: start_of_the_month, end_of_the_month.
	// Example: start_of_the_month
	PeriodToTrack string `json:"period_to_track,omitempty"`

	// The channels receiving the alerts. Requires an integration provider to be connected.
	// Example: ["#budget-notifications","#finance"]
	RecipientChannels string `json:"recipient_channels,omitempty"`

	// Alerts only send if they reach this number (as a percentage). When threshold is 100, that means alerts are triggered once costs reach 100% of the budget.
	// Example: 75
	Threshold string `json:"threshold,omitempty"`

	// token
	Token string `json:"token,omitempty"`

	// The token for the User who created this BudgetAlert.
	UserToken string `json:"user_token,omitempty"`

	// The Users that receive the alert.
	UserTokens []string `json:"user_tokens"`

	// The token for the Workspace the ResourceReport is a part of.
	WorkspaceToken string `json:"workspace_token,omitempty"`
}

// Validate validates this budget alert
func (m *BudgetAlert) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this budget alert based on context it is used
func (m *BudgetAlert) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *BudgetAlert) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *BudgetAlert) UnmarshalBinary(b []byte) error {
	var res BudgetAlert
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
