// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// VirtualTagConfig VirtualTagConfig model
//
// swagger:model VirtualTagConfig
type VirtualTagConfig struct {

	// The earliest month VirtualTagConfig should be backfilled to.
	// Example: false
	BackfillUntil string `json:"backfill_until,omitempty"`

	// The token of the User who created the VirtualTagConfig.
	// Example: usr_1234
	CreatedByToken string `json:"created_by_token,omitempty"`

	// The key of the VirtualTagConfig.
	// Example: Cost Center
	Key string `json:"key,omitempty"`

	// Whether the VirtualTagConfig can override a provider-supplied tag on a matching Cost.
	// Example: false
	Overridable string `json:"overridable,omitempty"`

	// The token of the VirtualTagConfig.
	// Example: vtag_1234
	Token string `json:"token,omitempty"`

	// Values for the VirtualTagConfig, with match precedence determined by their relative order in the list.
	Values []string `json:"values"`
}

// Validate validates this virtual tag config
func (m *VirtualTagConfig) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this virtual tag config based on context it is used
func (m *VirtualTagConfig) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *VirtualTagConfig) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *VirtualTagConfig) UnmarshalBinary(b []byte) error {
	var res VirtualTagConfig
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
