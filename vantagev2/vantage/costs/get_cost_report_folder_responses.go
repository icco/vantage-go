// Code generated by go-swagger; DO NOT EDIT.

package costs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vantage-sh/vantage-go/vantagev2/models"
)

// GetCostReportFolderReader is a Reader for the GetCostReportFolder structure.
type GetCostReportFolderReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCostReportFolderReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCostReportFolderOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetCostReportFolderNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /folders/{folder_token}] getCostReportFolder", response, response.Code())
	}
}

// NewGetCostReportFolderOK creates a GetCostReportFolderOK with default headers values
func NewGetCostReportFolderOK() *GetCostReportFolderOK {
	return &GetCostReportFolderOK{}
}

/*
GetCostReportFolderOK describes a response with status code 200, with default header values.

GetCostReportFolderOK get cost report folder o k
*/
type GetCostReportFolderOK struct {
	Payload *models.Folder
}

// IsSuccess returns true when this get cost report folder o k response has a 2xx status code
func (o *GetCostReportFolderOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get cost report folder o k response has a 3xx status code
func (o *GetCostReportFolderOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cost report folder o k response has a 4xx status code
func (o *GetCostReportFolderOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get cost report folder o k response has a 5xx status code
func (o *GetCostReportFolderOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get cost report folder o k response a status code equal to that given
func (o *GetCostReportFolderOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get cost report folder o k response
func (o *GetCostReportFolderOK) Code() int {
	return 200
}

func (o *GetCostReportFolderOK) Error() string {
	return fmt.Sprintf("[GET /folders/{folder_token}][%d] getCostReportFolderOK  %+v", 200, o.Payload)
}

func (o *GetCostReportFolderOK) String() string {
	return fmt.Sprintf("[GET /folders/{folder_token}][%d] getCostReportFolderOK  %+v", 200, o.Payload)
}

func (o *GetCostReportFolderOK) GetPayload() *models.Folder {
	return o.Payload
}

func (o *GetCostReportFolderOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Folder)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCostReportFolderNotFound creates a GetCostReportFolderNotFound with default headers values
func NewGetCostReportFolderNotFound() *GetCostReportFolderNotFound {
	return &GetCostReportFolderNotFound{}
}

/*
GetCostReportFolderNotFound describes a response with status code 404, with default header values.

GetCostReportFolderNotFound get cost report folder not found
*/
type GetCostReportFolderNotFound struct {
	Payload *models.Folder
}

// IsSuccess returns true when this get cost report folder not found response has a 2xx status code
func (o *GetCostReportFolderNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get cost report folder not found response has a 3xx status code
func (o *GetCostReportFolderNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cost report folder not found response has a 4xx status code
func (o *GetCostReportFolderNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get cost report folder not found response has a 5xx status code
func (o *GetCostReportFolderNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get cost report folder not found response a status code equal to that given
func (o *GetCostReportFolderNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get cost report folder not found response
func (o *GetCostReportFolderNotFound) Code() int {
	return 404
}

func (o *GetCostReportFolderNotFound) Error() string {
	return fmt.Sprintf("[GET /folders/{folder_token}][%d] getCostReportFolderNotFound  %+v", 404, o.Payload)
}

func (o *GetCostReportFolderNotFound) String() string {
	return fmt.Sprintf("[GET /folders/{folder_token}][%d] getCostReportFolderNotFound  %+v", 404, o.Payload)
}

func (o *GetCostReportFolderNotFound) GetPayload() *models.Folder {
	return o.Payload
}

func (o *GetCostReportFolderNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Folder)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
