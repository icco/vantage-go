// Code generated by go-swagger; DO NOT EDIT.

package costs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/vantage-sh/vantage-go/vantagev2/models"
)

// NewUpdateCostReportFolderParams creates a new UpdateCostReportFolderParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUpdateCostReportFolderParams() *UpdateCostReportFolderParams {
	return &UpdateCostReportFolderParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateCostReportFolderParamsWithTimeout creates a new UpdateCostReportFolderParams object
// with the ability to set a timeout on a request.
func NewUpdateCostReportFolderParamsWithTimeout(timeout time.Duration) *UpdateCostReportFolderParams {
	return &UpdateCostReportFolderParams{
		timeout: timeout,
	}
}

// NewUpdateCostReportFolderParamsWithContext creates a new UpdateCostReportFolderParams object
// with the ability to set a context for a request.
func NewUpdateCostReportFolderParamsWithContext(ctx context.Context) *UpdateCostReportFolderParams {
	return &UpdateCostReportFolderParams{
		Context: ctx,
	}
}

// NewUpdateCostReportFolderParamsWithHTTPClient creates a new UpdateCostReportFolderParams object
// with the ability to set a custom HTTPClient for a request.
func NewUpdateCostReportFolderParamsWithHTTPClient(client *http.Client) *UpdateCostReportFolderParams {
	return &UpdateCostReportFolderParams{
		HTTPClient: client,
	}
}

/*
UpdateCostReportFolderParams contains all the parameters to send to the API endpoint

	for the update cost report folder operation.

	Typically these are written to a http.Request.
*/
type UpdateCostReportFolderParams struct {

	// ReportsFolders.
	ReportsFolders *models.PutReportsFolders

	// FolderToken.
	FolderToken string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the update cost report folder params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateCostReportFolderParams) WithDefaults() *UpdateCostReportFolderParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the update cost report folder params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateCostReportFolderParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the update cost report folder params
func (o *UpdateCostReportFolderParams) WithTimeout(timeout time.Duration) *UpdateCostReportFolderParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update cost report folder params
func (o *UpdateCostReportFolderParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update cost report folder params
func (o *UpdateCostReportFolderParams) WithContext(ctx context.Context) *UpdateCostReportFolderParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update cost report folder params
func (o *UpdateCostReportFolderParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update cost report folder params
func (o *UpdateCostReportFolderParams) WithHTTPClient(client *http.Client) *UpdateCostReportFolderParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update cost report folder params
func (o *UpdateCostReportFolderParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithReportsFolders adds the reportsFolders to the update cost report folder params
func (o *UpdateCostReportFolderParams) WithReportsFolders(reportsFolders *models.PutReportsFolders) *UpdateCostReportFolderParams {
	o.SetReportsFolders(reportsFolders)
	return o
}

// SetReportsFolders adds the reportsFolders to the update cost report folder params
func (o *UpdateCostReportFolderParams) SetReportsFolders(reportsFolders *models.PutReportsFolders) {
	o.ReportsFolders = reportsFolders
}

// WithFolderToken adds the folderToken to the update cost report folder params
func (o *UpdateCostReportFolderParams) WithFolderToken(folderToken string) *UpdateCostReportFolderParams {
	o.SetFolderToken(folderToken)
	return o
}

// SetFolderToken adds the folderToken to the update cost report folder params
func (o *UpdateCostReportFolderParams) SetFolderToken(folderToken string) {
	o.FolderToken = folderToken
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateCostReportFolderParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.ReportsFolders != nil {
		if err := r.SetBodyParam(o.ReportsFolders); err != nil {
			return err
		}
	}

	// path param folder_token
	if err := r.SetPathParam("folder_token", o.FolderToken); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
