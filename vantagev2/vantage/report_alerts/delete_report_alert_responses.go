// Code generated by go-swagger; DO NOT EDIT.

package report_alerts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vantage-sh/vantage-go/vantagev2/models"
)

// DeleteReportAlertReader is a Reader for the DeleteReportAlert structure.
type DeleteReportAlertReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteReportAlertReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteReportAlertNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDeleteReportAlertNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /report_alerts/{report_alert_token}] deleteReportAlert", response, response.Code())
	}
}

// NewDeleteReportAlertNoContent creates a DeleteReportAlertNoContent with default headers values
func NewDeleteReportAlertNoContent() *DeleteReportAlertNoContent {
	return &DeleteReportAlertNoContent{}
}

/*
DeleteReportAlertNoContent describes a response with status code 204, with default header values.

DeleteReportAlertNoContent delete report alert no content
*/
type DeleteReportAlertNoContent struct {
	Payload *models.ReportAlert
}

// IsSuccess returns true when this delete report alert no content response has a 2xx status code
func (o *DeleteReportAlertNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete report alert no content response has a 3xx status code
func (o *DeleteReportAlertNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete report alert no content response has a 4xx status code
func (o *DeleteReportAlertNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete report alert no content response has a 5xx status code
func (o *DeleteReportAlertNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete report alert no content response a status code equal to that given
func (o *DeleteReportAlertNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete report alert no content response
func (o *DeleteReportAlertNoContent) Code() int {
	return 204
}

func (o *DeleteReportAlertNoContent) Error() string {
	return fmt.Sprintf("[DELETE /report_alerts/{report_alert_token}][%d] deleteReportAlertNoContent  %+v", 204, o.Payload)
}

func (o *DeleteReportAlertNoContent) String() string {
	return fmt.Sprintf("[DELETE /report_alerts/{report_alert_token}][%d] deleteReportAlertNoContent  %+v", 204, o.Payload)
}

func (o *DeleteReportAlertNoContent) GetPayload() *models.ReportAlert {
	return o.Payload
}

func (o *DeleteReportAlertNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ReportAlert)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteReportAlertNotFound creates a DeleteReportAlertNotFound with default headers values
func NewDeleteReportAlertNotFound() *DeleteReportAlertNotFound {
	return &DeleteReportAlertNotFound{}
}

/*
DeleteReportAlertNotFound describes a response with status code 404, with default header values.

NotFound
*/
type DeleteReportAlertNotFound struct {
	Payload *models.Errors
}

// IsSuccess returns true when this delete report alert not found response has a 2xx status code
func (o *DeleteReportAlertNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete report alert not found response has a 3xx status code
func (o *DeleteReportAlertNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete report alert not found response has a 4xx status code
func (o *DeleteReportAlertNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete report alert not found response has a 5xx status code
func (o *DeleteReportAlertNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete report alert not found response a status code equal to that given
func (o *DeleteReportAlertNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete report alert not found response
func (o *DeleteReportAlertNotFound) Code() int {
	return 404
}

func (o *DeleteReportAlertNotFound) Error() string {
	return fmt.Sprintf("[DELETE /report_alerts/{report_alert_token}][%d] deleteReportAlertNotFound  %+v", 404, o.Payload)
}

func (o *DeleteReportAlertNotFound) String() string {
	return fmt.Sprintf("[DELETE /report_alerts/{report_alert_token}][%d] deleteReportAlertNotFound  %+v", 404, o.Payload)
}

func (o *DeleteReportAlertNotFound) GetPayload() *models.Errors {
	return o.Payload
}

func (o *DeleteReportAlertNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
