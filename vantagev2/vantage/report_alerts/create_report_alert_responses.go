// Code generated by go-swagger; DO NOT EDIT.

package report_alerts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vantage-sh/vantage-go/vantagev2/models"
)

// CreateReportAlertReader is a Reader for the CreateReportAlert structure.
type CreateReportAlertReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateReportAlertReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateReportAlertCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateReportAlertBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /report_alerts] createReportAlert", response, response.Code())
	}
}

// NewCreateReportAlertCreated creates a CreateReportAlertCreated with default headers values
func NewCreateReportAlertCreated() *CreateReportAlertCreated {
	return &CreateReportAlertCreated{}
}

/*
CreateReportAlertCreated describes a response with status code 201, with default header values.

CreateReportAlertCreated create report alert created
*/
type CreateReportAlertCreated struct {
	Payload *models.ReportAlert
}

// IsSuccess returns true when this create report alert created response has a 2xx status code
func (o *CreateReportAlertCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create report alert created response has a 3xx status code
func (o *CreateReportAlertCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create report alert created response has a 4xx status code
func (o *CreateReportAlertCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create report alert created response has a 5xx status code
func (o *CreateReportAlertCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create report alert created response a status code equal to that given
func (o *CreateReportAlertCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create report alert created response
func (o *CreateReportAlertCreated) Code() int {
	return 201
}

func (o *CreateReportAlertCreated) Error() string {
	return fmt.Sprintf("[POST /report_alerts][%d] createReportAlertCreated  %+v", 201, o.Payload)
}

func (o *CreateReportAlertCreated) String() string {
	return fmt.Sprintf("[POST /report_alerts][%d] createReportAlertCreated  %+v", 201, o.Payload)
}

func (o *CreateReportAlertCreated) GetPayload() *models.ReportAlert {
	return o.Payload
}

func (o *CreateReportAlertCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ReportAlert)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateReportAlertBadRequest creates a CreateReportAlertBadRequest with default headers values
func NewCreateReportAlertBadRequest() *CreateReportAlertBadRequest {
	return &CreateReportAlertBadRequest{}
}

/*
CreateReportAlertBadRequest describes a response with status code 400, with default header values.

BadRequest
*/
type CreateReportAlertBadRequest struct {
	Payload *models.Errors
}

// IsSuccess returns true when this create report alert bad request response has a 2xx status code
func (o *CreateReportAlertBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create report alert bad request response has a 3xx status code
func (o *CreateReportAlertBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create report alert bad request response has a 4xx status code
func (o *CreateReportAlertBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create report alert bad request response has a 5xx status code
func (o *CreateReportAlertBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create report alert bad request response a status code equal to that given
func (o *CreateReportAlertBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create report alert bad request response
func (o *CreateReportAlertBadRequest) Code() int {
	return 400
}

func (o *CreateReportAlertBadRequest) Error() string {
	return fmt.Sprintf("[POST /report_alerts][%d] createReportAlertBadRequest  %+v", 400, o.Payload)
}

func (o *CreateReportAlertBadRequest) String() string {
	return fmt.Sprintf("[POST /report_alerts][%d] createReportAlertBadRequest  %+v", 400, o.Payload)
}

func (o *CreateReportAlertBadRequest) GetPayload() *models.Errors {
	return o.Payload
}

func (o *CreateReportAlertBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
